name: Secure Messaging App Preview CI
env:
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  DATABASE_URL: ${{ secrets.AUTH_SECRET }}
  GITHUB_CLIENT_ID: ${{ secrets.MY_GITHUB_CLIENT_ID }}
  GITHUB_CLIENT_SECRET: ${{ secrets.MY_GITHUB_CLIENT_SECRET }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
  NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
  NEXT_PUBLIC_PUSHER_APP_KEY: ${{ secrets.NEXT_PUBLIC_PUSHER_APP_KEY }}
  PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
  PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
  PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
  ENCRYPTION_SECRET_KEY: ${{ secrets.ENCRYPTION_SECRET_KEY }}
  
on:
  push:
    branches-ignore:
      - main

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
        cache: 'npm'

    - name: Run CI command
      run: npm ci
      
    - name: Check linting
      run: npm run lint
      
    - name: Build
      run: npx prisma generate && npm run build